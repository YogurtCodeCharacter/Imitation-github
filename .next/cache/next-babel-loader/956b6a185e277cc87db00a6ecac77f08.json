{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// const B =() => {\n//     return <span>页面</span>\n// }\n// B.getInitialProps = async (ctx) => {\n//     console.log('b');\n//     return { sex: 'B'}\n// }\n// export default B;\nimport { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport MyContext from '../lib/my-context.js';\n\nfunction reducerCount(state, action) {\n  switch (action.type) {\n    case \"add\":\n      return state = state + 1;\n\n    case \"min\":\n      return state = state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction B() {\n  _s();\n\n  var _useReducer = useReducer(reducerCount, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  var context = useContext(MyContext); // TODO: bss Ref 在某一个节点上面的ref属性上面赋值，然后直接调用bssRef 进行节点元素获取\n\n  var bssRef = useRef();\n  useEffect(function () {\n    console.log('组件加载完成');\n    var time = setInterval(function () {\n      dispatchCount({\n        type: 'add'\n      });\n    }, 1000);\n    return function () {\n      console.log('B页面卸载了');\n      clearInterval(time);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"span\", null, \"\\u9875\\u9762B\", count), __jsx(\"div\", null, \"context\\u4F20\\u503C \\u5C55\\u793A\", context));\n}\n\n_s(B, \"7FkYxY/9cyGl9/PV68TDDhRWp2k=\");\n\n_c = B;\n\nB.getInitialProps = function (_ref) {\n  var req = _ref.req;\n  console.log('这是B页面');\n  return {\n    name: 'pll'\n  };\n};\n\nexport default B; // const B = function B(params) {\n// }\n// const B = () => { }\n\nvar _c;\n\n$RefreshReg$(_c, \"B\");","map":{"version":3,"sources":["/Users/zongliming/Desktop/Imitation-github/pages/b.js"],"names":["useState","useEffect","useReducer","useContext","useRef","MyContext","reducerCount","state","action","type","B","count","dispatchCount","context","bssRef","console","log","time","setInterval","clearInterval","getInitialProps","req","name"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,UAA1C,EAAsDC,MAAtD,QAAoE,OAApE;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOF,KAAK,GAAGA,KAAK,GAAG,CAAvB;;AACJ,SAAK,KAAL;AACI,aAAOA,KAAK,GAAGA,KAAK,GAAG,CAAvB;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH;;AAED,SAASG,CAAT,GAAa;AAAA;;AAAA,oBACsBR,UAAU,CAACI,YAAD,EAAe,CAAf,CADhC;AAAA,MACFK,KADE;AAAA,MACKC,aADL;;AAET,MAAMC,OAAO,GAAGV,UAAU,CAACE,SAAD,CAA1B,CAFS,CAGT;;AACA,MAAMS,MAAM,GAAGV,MAAM,EAArB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMC,IAAI,GAAGC,WAAW,CAAC,YAAM;AAC3BN,MAAAA,aAAa,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAb;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO,YAAM;AAAEM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAuBG,MAAAA,aAAa,CAACF,IAAD,CAAb;AAAsB,KAA5D;AACH,GANQ,EAMN,EANM,CAAT;AAOA,SAAO,4BACH,qCAAUN,KAAV,CADG,EAEH,uDAAkBE,OAAlB,CAFG,CAAP;AAIH;;GAjBQH,C;;KAAAA,C;;AAmBTA,CAAC,CAACU,eAAF,GAAoB,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC7BN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAO;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CAHD;;AAKA,eAAeZ,CAAf,C,CAGA;AAEA;AAEA","sourcesContent":["// const B =() => {\n//     return <span>页面</span>\n// }\n\n// B.getInitialProps = async (ctx) => {\n//     console.log('b');\n//     return { sex: 'B'}\n// }\n\n// export default B;\nimport { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport MyContext from '../lib/my-context.js';\n\nfunction reducerCount(state, action) {\n    switch (action.type) {\n        case \"add\":\n            return state = state + 1;\n        case \"min\":\n            return state = state - 1;\n        default:\n            return state;\n    }\n}\n\nfunction B() {\n    const [count, dispatchCount] = useReducer(reducerCount, 0);\n    const context = useContext(MyContext);\n    // TODO: bss Ref 在某一个节点上面的ref属性上面赋值，然后直接调用bssRef 进行节点元素获取\n    const bssRef = useRef();\n\n    useEffect(() => {\n        console.log('组件加载完成');\n        const time = setInterval(() => {\n            dispatchCount({ type: 'add' });\n        }, 1000);\n        return () => { console.log('B页面卸载了'); clearInterval(time); }\n    }, [])\n    return <>\n        <span>页面B{count}</span>\n        <div>context传值 展示{context}</div>\n    </>\n}\n\nB.getInitialProps = ({ req }) => {\n    console.log('这是B页面');\n    return { name: 'pll' }\n}\n\nexport default B;\n\n\n// const B = function B(params) {\n    \n// }\n\n// const B = () => { }\n"]},"metadata":{},"sourceType":"module"}