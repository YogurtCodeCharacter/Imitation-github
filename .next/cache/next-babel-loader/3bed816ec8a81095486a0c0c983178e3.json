{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar _require = require('../lib/api.js'),\n    request = _require.request;\n\nvar Index = function Index(_ref) {\n  var resultRepos = _ref.resultRepos,\n      resultStaredRepos = _ref.resultStaredRepos;\n  console.log('userRepos', resultRepos, resultStaredRepos);\n  return __jsx(\"span\", null, \"Index\");\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var ctx, reduxStore, isLogin, userInfo, resultRepos, resultStaredRepos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref2.ctx, reduxStore = _ref2.reduxStore, isLogin = _ref2.isLogin;\n            userInfo = reduxStore.userInfo;\n\n            if (!(!userInfo && userInfo.id)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              isLogin: false\n            });\n\n          case 4:\n            _context.next = 6;\n            return request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n\n          case 6:\n            resultRepos = _context.sent;\n            _context.next = 9;\n            return request({\n              url: '/user/starred'\n            }, ctx.req, ctx.res);\n\n          case 9:\n            resultStaredRepos = _context.sent;\n            return _context.abrupt(\"return\", {\n              isLogin: true,\n              resultRepos: resultRepos.data,\n              resultStaredRepos: resultStaredRepos.data\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/zongliming/Desktop/Imitation-github/pages/index.js"],"names":["require","request","Index","resultRepos","resultStaredRepos","console","log","getInitialProps","ctx","reduxStore","isLogin","userInfo","id","url","req","res","data"],"mappings":";;;;;eAAoBA,OAAO,CAAC,eAAD,C;IAAnBC,O,YAAAA,O;;AACR,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwC;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,WAAzB,EAAsCC,iBAAtC;AACA,SAAO,4BAAP;AACH,CAHD;;KAAMF,K;;AAKNA,KAAK,CAACK,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,UAAd,SAAcA,UAAd,EAA0BC,OAA1B,SAA0BA,OAA1B;AAEdC,YAAAA,QAFc,GAEHF,UAAU,CAACE,QAFR;;AAAA,kBAGhB,CAACA,QAAD,IAAaA,QAAQ,CAACC,EAHN;AAAA;AAAA;AAAA;;AAAA,6CAIT;AACHF,cAAAA,OAAO,EAAE;AADN,aAJS;;AAAA;AAAA;AAAA,mBASMT,OAAO,CAC7B;AACAY,cAAAA,GAAG,EAAE;AADL,aAD6B,EAI7BL,GAAG,CAACM,GAJyB,EAK7BN,GAAG,CAACO,GALyB,CATb;;AAAA;AASdZ,YAAAA,WATc;AAAA;AAAA,mBAgBYF,OAAO,CACnC;AACIY,cAAAA,GAAG,EAAE;AADT,aADmC,EAInCL,GAAG,CAACM,GAJ+B,EAKnCN,GAAG,CAACO,GAL+B,CAhBnB;;AAAA;AAgBdX,YAAAA,iBAhBc;AAAA,6CAuBb;AACHM,cAAAA,OAAO,EAAE,IADN;AAEHP,cAAAA,WAAW,EAAEA,WAAW,CAACa,IAFtB;AAGHZ,cAAAA,iBAAiB,EAAEA,iBAAiB,CAACY;AAHlC,aAvBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AA8BA,eAAed,KAAf","sourcesContent":["const { request } = require('../lib/api.js');\nconst Index = ({ resultRepos, resultStaredRepos }) => {\n    console.log('userRepos', resultRepos, resultStaredRepos);\n    return <span>Index</span>\n}\n\nIndex.getInitialProps = async ({ ctx, reduxStore, isLogin }) => {\n\n    const userInfo = reduxStore.userInfo;\n    if (!userInfo && userInfo.id) {\n        return {\n            isLogin: false\n        }\n    }\n\n    const resultRepos = await request(\n        {\n        url: '/user/repos',\n        },\n        ctx.req,\n        ctx.res\n        );\n    const resultStaredRepos = await request(\n        {\n            url: '/user/starred'\n        },\n        ctx.req,\n        ctx.res\n    )\n    return {\n        isLogin: true,\n        resultRepos: resultRepos.data,\n        resultStaredRepos: resultStaredRepos.data\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}