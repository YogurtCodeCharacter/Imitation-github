{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport Layout from '../components/layout/layout.js';\nimport PageLoadding from '../components/PageLoadding.jsx';\nimport WithReduxHoc from '../lib/witht-redux.js';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loadding: false\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  startLoadding() {\n    this.setState({\n      loadding: true\n    });\n  }\n\n  stopLoadding() {\n    this.setState({\n      loadding: false\n    });\n  } // TODO: 组件加载\n\n\n  componentDidMount() {\n    Router.events.on('routerChangeStart', this.startLoadding);\n    Router.events.on('routerChangeComplete', this.stopLoadding);\n    Router.events.on('routerChangeError', this.stopLoadding);\n  } // TODO: 组件卸载前\n\n\n  componentWillUnmount() {\n    Router.events.off('routerChangeStart', this.startLoadding);\n    Router.events.off('routerChangeComplete', this.stopLoadding);\n    Router.events.off('routerChangeError', this.stopLoadding);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    const {\n      loadding\n    } = this.state;\n    console.log('loadding', loadding);\n    return __jsx(Provider, {\n      store: reduxStore\n    }, loadding ? __jsx(PageLoadding, null) : null, __jsx(Layout, null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"Index\")), __jsx(Link, {\n      href: \"/detail\"\n    }, __jsx(\"a\", null, \"detail\")), __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default WithReduxHoc(MyApp);","map":{"version":3,"sources":["/Users/zongliming/Desktop/Imitation-github/pages/_app.js"],"names":["App","Provider","Router","Link","Layout","PageLoadding","WithReduxHoc","MyApp","loadding","getInitialProps","ctx","Component","pageProps","startLoadding","setState","stopLoadding","componentDidMount","events","on","componentWillUnmount","off","render","reduxStore","props","state","console","log"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAGA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCACZ;AACJQ,MAAAA,QAAQ,EAAE;AADN,KADY;AAAA;;AAKpB,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB;;AACA,QAAID,SAAS,CAACF,eAAd,EAA+B;AAC3BG,MAAAA,SAAS,GAAG,MAAMD,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACH;;AACD,WAAO;AACHE,MAAAA;AADG,KAAP;AAGH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,SAAKC,QAAL,CAAc;AACVN,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGH;;AAEDO,EAAAA,YAAY,GAAG;AACX,SAAKD,QAAL,CAAc;AACVN,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGH,GA1BmB,CA4BpB;;;AACAQ,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,MAAM,CAACe,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKL,aAA3C;AACAX,IAAAA,MAAM,CAACe,MAAP,CAAcC,EAAd,CAAiB,sBAAjB,EAAyC,KAAKH,YAA9C;AACAb,IAAAA,MAAM,CAACe,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKH,YAA3C;AACH,GAjCmB,CAmCpB;;;AACAI,EAAAA,oBAAoB,GAAG;AACnBjB,IAAAA,MAAM,CAACe,MAAP,CAAcG,GAAd,CAAkB,mBAAlB,EAAuC,KAAKP,aAA5C;AACAX,IAAAA,MAAM,CAACe,MAAP,CAAcG,GAAd,CAAkB,sBAAlB,EAA0C,KAAKL,YAA/C;AACAb,IAAAA,MAAM,CAACe,MAAP,CAAcG,GAAd,CAAkB,mBAAlB,EAAuC,KAAKL,YAA5C;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBU,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,UAAM;AAAEf,MAAAA;AAAF,QAAe,KAAKgB,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,QAAxB;AACA,WAAQ,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEc;AAAjB,OACFd,QAAQ,GAAG,MAAC,YAAD,OAAH,GAAsB,IAD5B,EAEJ,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OAAe,yBAAf,CADJ,EAEI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OAAqB,0BAArB,CAFJ,EAGI,MAAC,SAAD,EAAeI,SAAf,CAHJ,CAFI,CAAR;AAQH;;AAtDmB;;AAyDxB,eAAeN,YAAY,CAACC,KAAD,CAA3B","sourcesContent":["import App from 'next/app';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport Layout from '../components/layout/layout.js';\nimport PageLoadding from '../components/PageLoadding.jsx';\nimport WithReduxHoc from '../lib/witht-redux.js';\n\n\nclass MyApp extends App {\n    state = {\n        loadding: false\n    };\n\n    static async getInitialProps(ctx) {\n        const { Component } = ctx;\n        let pageProps = {};\n        if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx);\n        }\n        return {\n            pageProps\n        }\n    }\n\n    startLoadding() {\n        this.setState({\n            loadding: true\n        });\n    }\n\n    stopLoadding() {\n        this.setState({\n            loadding: false\n        });\n    }\n\n    // TODO: 组件加载\n    componentDidMount() {\n        Router.events.on('routerChangeStart', this.startLoadding);\n        Router.events.on('routerChangeComplete', this.stopLoadding); \n        Router.events.on('routerChangeError', this.stopLoadding);\n    }\n\n    // TODO: 组件卸载前\n    componentWillUnmount() {\n        Router.events.off('routerChangeStart', this.startLoadding);\n        Router.events.off('routerChangeComplete', this.stopLoadding); \n        Router.events.off('routerChangeError', this.stopLoadding);\n    }\n\n    render() {\n        const { Component, pageProps, reduxStore } = this.props;\n        const { loadding } = this.state;\n        console.log('loadding', loadding)\n        return (<Provider store={reduxStore}>\n            { loadding ? <PageLoadding /> : null }\n            <Layout>\n                <Link href='/'><a>Index</a></Link >\n                <Link href='/detail'><a>detail</a></Link >\n                <Component {...pageProps} />\n            </Layout>\n        </Provider>);\n    }\n}\n\nexport default WithReduxHoc(MyApp); "]},"metadata":{},"sourceType":"module"}