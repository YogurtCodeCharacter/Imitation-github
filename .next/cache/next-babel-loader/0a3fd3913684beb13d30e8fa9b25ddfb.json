{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar _require = require('../lib/api.js'),\n    request = _require.request;\n\nvar Index = function Index() {\n  return __jsx(\"span\", null, \"Index\");\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var ctx, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref.ctx;\n            result = request({\n              url: '/user/repos'\n            }, ctx.req, ctx.res);\n            return _context.abrupt(\"return\", {\n              data: result.data\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/zongliming/Desktop/Imitation-github/pages/index.js"],"names":["require","request","Index","getInitialProps","ctx","result","url","req","res","data"],"mappings":";;;;;eAAoBA,OAAO,CAAC,eAAD,C;IAAnBC,O,YAAAA,O;;AACR,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,SAAO,4BAAP;AACH,CAFD;;KAAMA,K;;AAINA,KAAK,CAACC,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT;AACdC,YAAAA,MADc,GACLJ,OAAO,CAClB;AACAK,cAAAA,GAAG,EAAE;AADL,aADkB,EAIlBF,GAAG,CAACG,GAJc,EAKlBH,GAAG,CAACI,GALc,CADF;AAAA,6CAOb;AACHC,cAAAA,IAAI,EAAEJ,MAAM,CAACI;AADV,aAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeP,KAAf","sourcesContent":["const { request } = require('../lib/api.js');\nconst Index = () => {\n    return <span>Index</span>\n}\n\nIndex.getInitialProps = async ({ ctx }) => {\n    const result = request(\n        {\n        url: '/user/repos',\n        },\n        ctx.req,\n        ctx.res);\n    return {\n        data: result.data\n    }\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}