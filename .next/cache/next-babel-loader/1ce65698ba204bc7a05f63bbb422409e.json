{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nconst {\n  request\n} = require('../lib/api.js');\n\nconst Index = ({\n  resultRepos,\n  resultStaredRepos,\n  isLogin\n}) => {\n  console.log('userRepos', resultRepos, resultStaredRepos);\n  return __jsx(\"span\", null, \"Index\");\n};\n\nIndex.getInitialProps = async ({\n  ctx,\n  reduxStore\n}) => {\n  // const userInfo = reduxStore.getState.userInfo;\n  // if (!userInfo || !userInfo.id) {\n  //     return {\n  //         isLogin: false\n  //     }\n  // }\n  const resultRepos = await request({\n    url: '/user/repos'\n  }, ctx.req, ctx.res);\n  const resultStaredRepos = await request({\n    url: '/user/starred'\n  }, ctx.req, ctx.res);\n  return {\n    isLogin: true,\n    resultRepos: resultRepos.data,\n    resultStaredRepos: resultStaredRepos.data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/zongliming/Desktop/Imitation-github/pages/index.js"],"names":["request","require","Index","resultRepos","resultStaredRepos","isLogin","console","log","getInitialProps","ctx","reduxStore","url","req","res","data"],"mappings":";;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,iBAAf;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,WAAzB,EAAsCC,iBAAtC;AACA,SAAO,4BAAP;AACH,CAHD;;AAKAF,KAAK,CAACM,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA+B;AAEnD;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMP,WAAW,GAAG,MAAMH,OAAO,CAC7B;AACAW,IAAAA,GAAG,EAAE;AADL,GAD6B,EAI7BF,GAAG,CAACG,GAJyB,EAK7BH,GAAG,CAACI,GALyB,CAAjC;AAOA,QAAMT,iBAAiB,GAAG,MAAMJ,OAAO,CACnC;AACIW,IAAAA,GAAG,EAAE;AADT,GADmC,EAInCF,GAAG,CAACG,GAJ+B,EAKnCH,GAAG,CAACI,GAL+B,CAAvC;AAOA,SAAO;AACHR,IAAAA,OAAO,EAAE,IADN;AAEHF,IAAAA,WAAW,EAAEA,WAAW,CAACW,IAFtB;AAGHV,IAAAA,iBAAiB,EAAEA,iBAAiB,CAACU;AAHlC,GAAP;AAKH,CA5BD;;AA8BA,eAAeZ,KAAf","sourcesContent":["const { request } = require('../lib/api.js');\nconst Index = ({ resultRepos, resultStaredRepos, isLogin }) => {\n    console.log('userRepos', resultRepos, resultStaredRepos);\n    return <span>Index</span>\n}\n\nIndex.getInitialProps = async ({ ctx, reduxStore }) => {\n\n    // const userInfo = reduxStore.getState.userInfo;\n    // if (!userInfo || !userInfo.id) {\n    //     return {\n    //         isLogin: false\n    //     }\n    // }\n\n    const resultRepos = await request(\n        {\n        url: '/user/repos',\n        },\n        ctx.req,\n        ctx.res\n        );\n    const resultStaredRepos = await request(\n        {\n            url: '/user/starred'\n        },\n        ctx.req,\n        ctx.res\n    )\n    return {\n        isLogin: true,\n        resultRepos: resultRepos.data,\n        resultStaredRepos: resultStaredRepos.data\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}